// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum QuestionType {
  BOOLEAN
  RATING
  TEXT
  CHOICES
}

model Question {
  id          String   @id @default(cuid())
  text        String
  type        QuestionType
  options     String[] // For CHOICES type questions
  isPublished Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  responses Response[]
  
  @@map("questions")
}

model Response {
  id         String   @id @default(cuid())
  questionId String
  answer     String   // The actual response (yes/no, rating, text, or choice)
  metadata   Json     // Store IP, user agent, timestamp, etc.
  createdAt  DateTime @default(now())
  
  question Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
  
  @@map("responses")
}
